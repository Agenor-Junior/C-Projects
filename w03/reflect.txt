///////////////////////////////////////////////////////////////////////////
                              Reflection
                          Workshop - #3 (P2)
Full Name  : Agenor Dionizio da Silva Junior
Student ID#: 138121223
Email      : adionizio-da-silva-j@myseneca.ca
Section    : NRB

Authenticity Declaration:
I declare this submission is the result of my own work and has not been
shared with any other student or 3rd party content provider. This submitted
piece of work is entirely of my own creation.
///////////////////////////////////////////////////////////////////////////

1. 

The part of my code for this part is:

FOR THE FIRST USER:

printf(" 1|       %d         |      %d      |   %d   |\n",   ((uStrenght == 'l' || uStrenght == 'L') && (type1 == 'l' || type1 == 'L')) || ((uStrenght == 'm' || uStrenght == 'M') && (type1 == 'm' || type1 == 'M')) || 
                                                             ((uStrenght == 'r' || uStrenght == 'R') && (type1 == 'r' || type1 == 'R')), uServings < 5, 
                                                             ((uCream == 'y' || uCream == 'Y') && (cream1 == 'y' || cream1 == 'Y')) || ((uCream == 'n' || uCream == 'N') && (cream1 == 'n' || cream1 == 'N')));
printf(" 2|       %d         |      %d      |   %d   |\n",   ((uStrenght == 'l' || uStrenght == 'L') && (type2 == 'l' || type2 == 'L')) || ((uStrenght == 'm' || uStrenght == 'M') && (type2 == 'm' || type2 == 'M')) || 
                                                             ((uStrenght == 'r' || uStrenght == 'R') && (type2 == 'r' || type2 == 'R')), uServings >= 5 && uServings < 10, 
                                                             ((uCream == 'y' || uCream == 'Y') && (cream2 == 'y' || cream2 == 'Y')) || ((uCream == 'n' || uCream == 'N') && (cream2 == 'n' || cream2 == 'N')));
printf(" 3|       %d         |      %d      |   %d   |\n\n", ((uStrenght == 'l' || uStrenght == 'L') && (type3 == 'l' || type3 == 'L')) || ((uStrenght == 'm' || uStrenght == 'M') && (type3 == 'm' || type3 == 'M')) || 
                                                             ((uStrenght == 'r' || uStrenght == 'R') && (type3 == 'r' || type3 == 'R')), uServings >= 10, 
                                                             ((uCream == 'y' || uCream == 'Y') && (cream3 == 'y' || cream3 == 'Y')) || ((uCream == 'n' || uCream == 'N') && (cream3 == 'n' || cream3 == 'N')));
FOR THE SECOND USER IS THE SAME CODE.



A. In total, 128 relational expressions were used for the 2 parts (2 users), 64 each part. (same code for 2nd User)

printf(" 1|       %d         |      %d      |   %d   |\n",   ((uStrenght == 'l' || uStrenght == 'L') && (type1 == 'l' || type1 == 'L')) || ((uStrenght == 'm' || uStrenght == 'M') && (type1 == 'm' || type1 == 'M')) ||
-------------------------------------------------------------------------01------------------02----------------03--------------04----------------------05------------------06----------------07--------------08---------
                                                             ((uStrenght == 'r' || uStrenght == 'R') && (type1 == 'r' || type1 == 'R')), uServings < 5,
                                                             ------------09------------------10----------------11--------------12------------------13--
                                                             ((uCream == 'y' || uCream == 'Y') && (cream1 == 'y' || cream1 == 'Y')) || ((uCream == 'n' || uCream == 'N') && (cream1 == 'n' || cream1 == 'N')));
                                                             ---------14---------------15-----------------16---------------17-------------------18---------------19-----------------20---------------21--------
printf(" 2|       %d         |      %d      |   %d   |\n",   ((uStrenght == 'l' || uStrenght == 'L') && (type2 == 'l' || type2 == 'L')) || ((uStrenght == 'm' || uStrenght == 'M') && (type2 == 'm' || type2 == 'M')) ||
-------------------------------------------------------------------------22------------------23----------------24--------------25----------------------26------------------27----------------28--------------29--------- 
                                                             ((uStrenght == 'r' || uStrenght == 'R') && (type2 == 'r' || type2 == 'R')), uServings >= 5 && uServings < 10,
                                                             ------------31------------------32----------------33--------------34------------------35----------------36--- 
                                                             ((uCream == 'y' || uCream == 'Y') && (cream2 == 'y' || cream2 == 'Y')) || ((uCream == 'n' || uCream == 'N') && (cream2 == 'n' || cream2 == 'N')));
                                                             ---------37---------------38-----------------39---------------40-------------------41---------------42-----------------43-------------------------
printf(" 3|       %d         |      %d      |   %d   |\n\n", ((uStrenght == 'l' || uStrenght == 'L') && (type3 == 'l' || type3 == 'L')) || ((uStrenght == 'm' || uStrenght == 'M') && (type3 == 'm' || type3 == 'M')) ||
-------------------------------------------------------------------------44------------------45----------------46--------------47----------------------48------------------49----------------50--------------51---------
                                                             ((uStrenght == 'r' || uStrenght == 'R') && (type3 == 'r' || type3 == 'R')), uServings >= 10,
                                                             ------------52------------------53----------------54--------------55------------------56----
                                                             ((uCream == 'y' || uCream == 'Y') && (cream3 == 'y' || cream3 == 'Y')) || ((uCream == 'n' || uCream == 'N') && (cream3 == 'n' || cream3 == 'N')));
                                                             ---------57---------------58-----------------59---------------60-------------------61---------------62-----------------63---------------64--------



B. In total, 110 logical expressions were used for the 2 parts (2 Users), 55 each part. (same code for 2nd User)

printf(" 1|       %d         |      %d      |   %d   |\n",   ((uStrenght == 'l' || uStrenght == 'L') && (type1 == 'l' || type1 == 'L')) || ((uStrenght == 'm' || uStrenght == 'M') && (type1 == 'm' || type1 == 'M')) ||
--------------------------------------------------------------------------------01-------------------02---------------03----------------04--------------------05-------------------06---------------07----------------08
                                                             ((uStrenght == 'r' || uStrenght == 'R') && (type1 == 'r' || type1 == 'R')), uServings < 5,
                                                             -------------------09-------------------10---------------11-------------------------------
                                                             ((uCream == 'y' || uCream == 'Y') && (cream1 == 'y' || cream1 == 'Y')) || ((uCream == 'n' || uCream == 'N') && (cream1 == 'n' || cream1 == 'N')));
                                                             ----------------12----------------13----------------14-----------------15-----------------16----------------17----------------18------------------
printf(" 2|       %d         |      %d      |   %d   |\n",   ((uStrenght == 'l' || uStrenght == 'L') && (type2 == 'l' || type2 == 'L')) || ((uStrenght == 'm' || uStrenght == 'M') && (type2 == 'm' || type2 == 'M')) ||
--------------------------------------------------------------------------------19-------------------20---------------21----------------22--------------------23-------------------24---------------25----------------26
                                                             ((uStrenght == 'r' || uStrenght == 'R') && (type2 == 'r' || type2 == 'R')), uServings >= 5 && uServings < 10,
                                                             -------------------27-------------------28---------------29--------------------------------30----------------
                                                             ((uCream == 'y' || uCream == 'Y') && (cream2 == 'y' || cream2 == 'Y')) || ((uCream == 'n' || uCream == 'N') && (cream2 == 'n' || cream2 == 'N')));
                                                             ----------------31----------------32-----------------33-----------------34----------------35----------------36----------------37------------------
printf(" 3|       %d         |      %d      |   %d   |\n\n", ((uStrenght == 'l' || uStrenght == 'L') && (type3 == 'l' || type3 == 'L')) || ((uStrenght == 'm' || uStrenght == 'M') && (type3 == 'm' || type3 == 'M')) ||
--------------------------------------------------------------------------------38-------------------39---------------40----------------41--------------------42-------------------43---------------44----------------45
                                                             ((uStrenght == 'r' || uStrenght == 'R') && (type3 == 'r' || type3 == 'R')), uServings >= 10,
                                                             -------------------46---------------47-------------------48---------------------------------
                                                             ((uCream == 'y' || uCream == 'Y') && (cream3 == 'y' || cream3 == 'Y')) || ((uCream == 'n' || uCream == 'N') && (cream3 == 'n' || cream3 == 'N')));
                                                             ----------------49----------------50----------------51-----------------52-----------------53----------------54----------------55------------------


2.

This logic can be done in 2 ways:

A. Not using DeMorgan's Law.
In this case the logic would look like this:

printf("9. Based on product ID, product 3 is unique -> %d\n", 
       product3 != product1 && product3 != product2);



B. Using DeMorgan's Law.
In this case the logic would look like this:


printf("9. Based on product ID, product 3 is unique -> %d\n",
      !(product3 == product1 || product3 == product2));


The method I used was using DeMorgan's Law.


3.

Method 1:
    
const double GRAMS_IN_LBS = 453.5924;
    
int  weight1,    weight2,    weight3, uServings;
char type1,      type2,      type3;    
char cream1,     cream2,     cream3, uStrenght, uCream;

Method 2:

const double GRAMS_IN_LBS = 453.5924;


char type1;
int  weight1;
char cream1;

char type2;
int  weight2;
char cream2;

char type3;
int  weight3;
char cream3;

char uStrenght, uCream;
int uServings;
